apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: app-creator
  title: Create a New Application
  description: Create a new application from a template
  tags:
    - simplenodeservice
  links:
    - url: https://www.dynatrace.com/trial
      title: Dynatrace Trial
      icon: docs
    - url: https://github.com/grabnerandi/simplenodeservice
      title: simplenodeservice on GitHub
      icon: search
spec:
  owner: infrastructure
  type: service
  parameters:
    - title: Choose a Project
      properties:
        projectName:
          title: Choose a Project
          type: string
          description: Which project would you like to deploy?
          enum:
            - 'simplenodeservice'
          default: 'simplenodeservice'
    - title: Your Team's Details
      required:
        - teamIdentifier
        - teamFullName
        - teamEmail
      properties:
        teamIdentifier:
          title: Team identifier
          description: Your unique internal team identifier (eg. team01)
          type: string
          pattern: '^team\d+$' # must match `team` + 1 or more digit. eg. `team1`, `team123`, `team9843` all valid. `team` invalid.
          ui:placeholder: 'teamIdentifier'
          default: 'team01'
        teamFullName:
          title: Full name of the team 
          description: Your real team name (eg. Team Best App Ever)
          type: string
          ui:placeholder: 'teamFullName'
          default: "Team 01"
        teamEmail:
          title: Team Email
          description: Dummy email to reach your team (eg. team01@example.com)
          type: string
          ui:placeholder: 'teamEmail'
          default: "team01@example.com"
    - title: Application Details
      required:
        - appVersion
        - releaseStage
        - doraEnabled
        - includeSecurityScans
        - includeDTConfig
      properties:
        appVersion:
          title: Application Version
          description: SemVer eg. 1.0.2
          type: string
          default: "1.0.2"
          pattern: '^\d+.\d+.\d+$'
        releaseStage:
          title: "Software Lifecycle Stage"
          description: "Which stage is this software in? (eg. qa, staging, preprod)"
          type: string
          default: "qa"
        doraEnabled:
          title: "DORA metric tracking enabled?"
          description: "Enable automatic DORA metric and OpenTelemetry trace generation for this application?"
          type: string
          enum:
            - 'enabled'
            - 'not enabled'
          default: "not enabled"          
        includeSecurityScans:
          title: "Include Security scans?"
          description: "Scan this app automatically and push results to Dynatrace?"
          type: boolean
          default: false
        includeDTConfig:
          title: "Include Dynatrace Configuration?"
          description: "Include level 1 (basic) Dynatrace Configuration as Code for this application?"
          type: boolean
          default: false
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: "apptemplates/${{ parameters.projectName }}-content"
        targetPath: "customer-apps/${{ parameters.projectName }}-${{ parameters.teamIdentifier}}-${{ parameters.releaseStage }}"
        values:
         projectName: ${{ parameters.projectName }}
         teamIdentifier: ${{ parameters.teamIdentifier }}
         teamFullName: ${{ parameters.teamFullName }}
         teamEmail: ${{ parameters.teamEmail }}
         appVersion: ${{ parameters.appVersion }}
         releaseStage: ${{ parameters.releaseStage }}
         doraEnabled: ${{ parameters.doraEnabled }}
         includeSecurityScans: ${{ parameters.includeSecurityScans }}
         includeDTConfig: ${{ parameters.includeDTConfig }}
    - id: delete-security-scan-files
      name: Delete security scan files
      if: ${{ parameters.includeSecurityScans === false }}
      action: fs:delete
      input:
        files:
          - "./${{ parameters.projectName }}-content/argoapp/securityScanJob.yml"
    - id: delete-monaco-files
      name: Delete DT Configuration Files
      if: ${{ parameters.includeDTConfig === false }}
      action: fs:delete
      input:
        files:
          - "./customer-apps/${{ parameters.projectName }}-${{ parameters.teamIdentifier }}-${{ parameters.releaseStage }}/monaco"
          - "./customer-apps/${{ parameters.projectName }}-${{ parameters.teamIdentifier }}-${{ parameters.releaseStage }}/workflow-post-sync-apply-monaco.yml"
    - id: publish
      action: publish:github:pull-request
      name: Create Pull Request
      input:
        repoUrl: "github.com?repo=enablement-openpipeline-segments-iam&owner=yohanswanepoel"
        branchName: ${{ parameters.projectName }}-${{ parameters.teamIdentifier}}-${{ parameters.releaseStage }}
        targetBranchName: "main"
        title: "New App Onboarding: ${{ parameters.projectName }}-${{ parameters.teamIdentifier}}-${{ parameters.releaseStage }}"
        description: "A new application is coming! ${{ parameters.projectName }} from ${{ parameters.teamIdentifier}} in ${{ parameters.releaseStage }} is ready for review."
        update: true
    - id: catalog
      name: Register to Catalog
      action: catalog:register
      input:
        catalogInfoUrl: https://github.com/yohanswanepoel/enablement-openpipeline-segments-iam.git/blob/main/customer-apps/${{ parameters.projectName }}-${{ parameters.teamIdentifier }}-${{ parameters.releaseStage }}/backstage-templates/catalog-info.yaml
        optional: true
  output:
    links:
      - title: View on Github
        url: ${{ steps.publish.output.remoteUrl }}
      - title: View in Catalog
        icon: catalog
        entityRef: ${{ steps.catalog.output.entityRef }}
      - title: View in ArgoCD
        icon: catalog
        url: https://animated-space-guide-p7wqqx54xgvc49r-30100.GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN_PLACEHOLDER/applications/argocd/${{ parameters.projectName }}-${{ parameters.teamIdentifier }}-${{ parameters.releaseStage }}
      - title: View in Dynatrace
        icon: catalog
        url: https://imb05402.apps.dynatrace.com
---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gather-feedback
  title: Platform Feedback Form
  description: Imagine you need to collect feedback from your users. Don't make them email you, a web form is much nicer!
  tags:
    - platform
    - feedback
  links:
    - url: https://www.example.com/platformteam
      title: Platform Improvement Process
      icon: docs
spec:
  owner: infrastructure
  type: platform
  parameters:
    - title: Feedback Form
      properties:
        feedbackType:
          title: Feedback Type
          type: string
          description: Which project would you like to deploy?
          enum:
            - 'improvement'
            - 'feature'
            - 'bug'
            - 'praise'
          enumNames:
            - 'An existing platform feature could be improved...'
            - 'The platform needs to do...'
            - 'Help! Something is broken!'
            - 'The platform is great. Just saying thanks!'
          default: 'improvement'
        userIdentifier:
          title: Your Name (optional)
          description: (optional) Your name
          type: string
          ui:placeholder: 'yourName'
          default: 'testing'
        feedback:
          title: "Leave your feedback below"
          type: string
          ui:widget: textarea
          ui:options:
            rows: 10
          default: "Talk to us..."
        keepMeInformed:
          title: "Stay informed of progress on this item?"
          description: "Tick this box if you want email updates on this item to be sent from the platform team."
          type: boolean
          default: true
  steps:
    - id: send-event
      name: Submit Feedback
      action: http:backstage:request
      input:
        method: "POST"
        # This proxy is set in app-config.production.yaml
        # It should actually point to the bizevent ingest
        # But I don't know how to use backstage + oAuth
        # Q in #backstage: https://cloud-native.slack.com/archives/C01B5HYR2R3/p1701406188130209
        path: "/proxy/dteventingest"
        headers:
          Content-Type: "application/json; charset=utf-8"
        body: |
          {
            "eventType": "CUSTOM_INFO",
            "properties": {
              "type": "${{ parameters.feedbackType }}",
              "user": "${{ parameters.userIdentifier }}",
              "feedback": "${{ parameters.feedback }}",
              "stay-informed": "${{ parameters.keepMeInformed }}",
              "source": "backstage",
              "template": "platform-feedback"
            },
            "timeout": 1,
            "title": "ℹ️ Platform Feedback ℹ️"
          }
